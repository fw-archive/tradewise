{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SplashScreen}from'expo';import*as Font from'expo-font';import{Ionicons}from'@expo/vector-icons';import{NavigationContainer}from'@react-navigation/native';import{createStackNavigator}from'@react-navigation/stack';import BottomTabNavigator from\"./navigation/BottomTabNavigator\";import useLinking from\"./navigation/useLinking\";var Stack=createStackNavigator();export default function App(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isLoadingComplete=_React$useState2[0],setLoadingComplete=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),initialNavigationState=_React$useState4[0],setInitialNavigationState=_React$useState4[1];var containerRef=React.useRef();var _useLinking=useLinking(containerRef),getInitialState=_useLinking.getInitialState;React.useEffect(function(){function loadResourcesAndDataAsync(){return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;SplashScreen.preventAutoHide();_context.t0=setInitialNavigationState;_context.next=5;return _regeneratorRuntime.awrap(getInitialState());case 5:_context.t1=_context.sent;(0,_context.t0)(_context.t1);_context.next=9;return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({},Ionicons.font,{'space-mono':require(\"./assets/fonts/SpaceMono-Regular.ttf\")})));case 9:_context.next=14;break;case 11:_context.prev=11;_context.t2=_context[\"catch\"](0);console.warn(_context.t2);case 14:_context.prev=14;setLoadingComplete(true);SplashScreen.hide();return _context.finish(14);case 18:case\"end\":return _context.stop();}}},null,null,[[0,11,14,18]],Promise);}loadResourcesAndDataAsync();},[]);if(!isLoadingComplete&&!props.skipLoadingScreen){return null;}else{return React.createElement(View,{style:styles.container},Platform.OS==='ios'&&React.createElement(StatusBar,{barStyle:\"default\"}),React.createElement(NavigationContainer,{ref:containerRef,initialState:initialNavigationState},React.createElement(Stack.Navigator,null,React.createElement(Stack.Screen,{name:\"Root\",component:BottomTabNavigator}))));}}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff'}});","map":{"version":3,"sources":["C:/Users/okjin/Documents/GitHub/tradewise/App.js"],"names":["React","SplashScreen","Font","Ionicons","NavigationContainer","createStackNavigator","BottomTabNavigator","useLinking","Stack","App","props","useState","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","useRef","getInitialState","useEffect","loadResourcesAndDataAsync","preventAutoHide","loadAsync","font","require","console","warn","hide","skipLoadingScreen","styles","container","Platform","OS","StyleSheet","create","flex","backgroundColor"],"mappings":"49BAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,kPAEA,OAASC,YAAT,KAA6B,MAA7B,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,WAAtB,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,oBAAT,KAAqC,yBAArC,CAEA,MAAOC,CAAAA,kBAAP,uCACA,MAAOC,CAAAA,UAAP,+BAEA,GAAMC,CAAAA,KAAK,CAAGH,oBAAoB,EAAlC,CAEA,cAAe,SAASI,CAAAA,GAAT,CAAaC,KAAb,CAAoB,qBACeV,KAAK,CAACW,QAAN,CAAe,KAAf,CADf,oDAC1BC,iBAD0B,qBACPC,kBADO,0CAE2Bb,KAAK,CAACW,QAAN,EAF3B,qDAE1BG,sBAF0B,qBAEFC,yBAFE,qBAGjC,GAAMC,CAAAA,YAAY,CAAGhB,KAAK,CAACiB,MAAN,EAArB,CAHiC,gBAILV,UAAU,CAACS,YAAD,CAJL,CAIzBE,eAJyB,aAIzBA,eAJyB,CAOjClB,KAAK,CAACmB,SAAN,CAAgB,UAAM,CACpB,QAAeC,CAAAA,yBAAf,sJAEInB,YAAY,CAACoB,eAAb,GAFJ,YAKIN,yBALJ,kDAKoCG,eAAe,EALnD,iHAQUhB,IAAI,CAACoB,SAAL,kBACDnB,QAAQ,CAACoB,IADR,EAEJ,aAAcC,OAAO,wCAFjB,GARV,0FAcIC,OAAO,CAACC,IAAR,cAdJ,yBAgBIb,kBAAkB,CAAC,IAAD,CAAlB,CACAZ,YAAY,CAAC0B,IAAb,GAjBJ,2GAqBAP,yBAAyB,GAC1B,CAvBD,CAuBG,EAvBH,EAyBA,GAAI,CAACR,iBAAD,EAAsB,CAACF,KAAK,CAACkB,iBAAjC,CAAoD,CAClD,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,SAApB,EACGC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,EAAyB,oBAAC,SAAD,EAAW,QAAQ,CAAC,SAApB,EAD5B,CAEE,oBAAC,mBAAD,EAAqB,GAAG,CAAEhB,YAA1B,CAAwC,YAAY,CAAEF,sBAAtD,EACE,oBAAC,KAAD,CAAO,SAAP,MACE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,MAAnB,CAA0B,SAAS,CAAER,kBAArC,EADF,CADF,CAFF,CADF,CAUD,CACF,CAED,GAAMuB,CAAAA,MAAM,CAAGI,UAAU,CAACC,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CACTK,IAAI,CAAE,CADG,CAETC,eAAe,CAAE,MAFR,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport useLinking from './navigation/useLinking';\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}