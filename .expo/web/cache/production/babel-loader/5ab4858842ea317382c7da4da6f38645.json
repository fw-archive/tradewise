{"ast":null,"code":"import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{Ionicons}from'@expo/vector-icons';import*as WebBrowser from'expo-web-browser';import{RectButton,ScrollView}from'react-native-gesture-handler';export default function LinksScreen(){return React.createElement(ScrollView,{style:styles.container,contentContainerStyle:styles.contentContainer},React.createElement(OptionButton,{icon:\"md-school\",label:\"Read the Expo dosdcumentation\",onPress:function onPress(){return WebBrowser.openBrowserAsync('https://docs.expo.io');}}),React.createElement(OptionButton,{icon:\"md-compass\",label:\"Read the React Navigation documentation\",onPress:function onPress(){return WebBrowser.openBrowserAsync('https://reactnavigation.org');}}),React.createElement(OptionButton,{icon:\"ios-chatboxes\",label:\"Ask a question on the forums\",onPress:function onPress(){return WebBrowser.openBrowserAsync('https://forums.expo.io');},isLastOption:true}),React.createElement(OptionButton,{icon:\"ios-chatboxes\",label:\"Ask a question on the forums\",onPress:function onPress(){return WebBrowser.openBrowserAsync('https://forums.expo.io');},isLastOption:true}),React.createElement(OptionButton,{icon:\"ios-chatboxes\",label:\"Ask a question on the forums\",onPress:function onPress(){return WebBrowser.openBrowserAsync('https://forums.expo.io');},isLastOption:true}),React.createElement(OptionButton,{icon:\"ios-chatboxes\",label:\"Ask a question on the forums\",onPress:function onPress(){return WebBrowser.openBrowserAsync('https://forums.expo.io');},isLastOption:true}),React.createElement(OptionButton,{icon:\"ios-chatboxes\",label:\"Ask a question on the forums\",onPress:function onPress(){return WebBrowser.openBrowserAsync('https://forums.expo.io');},isLastOption:true}));}function OptionButton(_ref){var icon=_ref.icon,label=_ref.label,onPress=_ref.onPress,isLastOption=_ref.isLastOption;return React.createElement(RectButton,{style:[styles.option,isLastOption&&styles.lastOption],onPress:onPress},React.createElement(View,{style:{flexDirection:'row'}},React.createElement(View,{style:styles.optionIconContainer},React.createElement(Ionicons,{name:icon,size:22,color:\"rgba(0,0,0,0.35)\"})),React.createElement(View,{style:styles.optionTextContainer},React.createElement(Text,{style:styles.optionText},label))));}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fafafa'},contentContainer:{paddingTop:15},optionIconContainer:{marginRight:12},option:{backgroundColor:'#fdfdfd',paddingHorizontal:15,paddingVertical:15,borderWidth:StyleSheet.hairlineWidth,borderBottomWidth:0,borderColor:'#ededed'},lastOption:{borderBottomWidth:StyleSheet.hairlineWidth},optionText:{fontSize:15,alignSelf:'flex-start',marginTop:1}});","map":{"version":3,"sources":["C:/Users/okjin/Documents/GitHub/tradewise/screens/LinksScreen.js"],"names":["React","Ionicons","WebBrowser","RectButton","ScrollView","LinksScreen","styles","container","contentContainer","openBrowserAsync","OptionButton","icon","label","onPress","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","StyleSheet","create","flex","backgroundColor","paddingTop","marginRight","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderBottomWidth","borderColor","fontSize","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <OptionButton\n        icon=\"md-school\"\n        label=\"Read the Expo dosdcumentation\"\n        onPress={() => WebBrowser.openBrowserAsync('https://docs.expo.io')}\n      />\n\n      <OptionButton\n        icon=\"md-compass\"\n        label=\"Read the React Navigation documentation\"\n        onPress={() => WebBrowser.openBrowserAsync('https://reactnavigation.org')}\n      />\n\n      <OptionButton\n        icon=\"ios-chatboxes\"\n        label=\"Ask a question on the forums\"\n        onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n        isLastOption\n      />\n      <OptionButton\n        icon=\"ios-chatboxes\"\n        label=\"Ask a question on the forums\"\n        onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n        isLastOption\n      />\n      <OptionButton\n        icon=\"ios-chatboxes\"\n        label=\"Ask a question on the forums\"\n        onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n        isLastOption\n      />\n      <OptionButton\n        icon=\"ios-chatboxes\"\n        label=\"Ask a question on the forums\"\n        onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n        isLastOption\n      />\n      <OptionButton\n        icon=\"ios-chatboxes\"\n        label=\"Ask a question on the forums\"\n        onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n        isLastOption\n      />\n      \n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}